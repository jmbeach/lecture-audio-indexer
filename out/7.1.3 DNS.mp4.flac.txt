FedEx will discuss the mechanism within DNS. That helps it perform better because as we saw with our example of a look up in the DNS system, to find the IP address corresponding to the hostname. Are we saw that it requires quite a few queries, it would be better if we could integrate in some kind of a cashing mechanism to reduce all of those look UPS. So that's what DNS cashing does. And the reason again, is that performing all those queries can take time and all of this time is before any of the actual communication. We actually care about takes place. So for example, if it took one second before a web page would start to load every time I'd probably be fairly annoying.
So if we do use cash and we can greatly reduce the overhead part of the reason that we can take advantage of this is at those top-level domain, servers are very rare. They going to change ride. So popular. Sites like CNN.com are going to be visited a lot. So then the local DNS server can have that information cashed so it doesn't have to go through all of those queries to figure out what the IP addresses for cnn.com. So roughly how that would cashing process would work in DNS is the DNS servers would cash the responses to the queries.
So that the next time I look up with a court occur, it doesn't have to go through that whole process of sending and receiving messages all the way up to the top level domain name server, and the root DNS servers. I'm at work. Just know the answer of what the IP address says. This response would also include a time to live field so that we know how long before were forced to. I prefer the DNS server is forced to go look up that IP address again. So after that would time would expire. The server would delete that cashed in tree.
So there's another concept and cashing that can also help improve performance in particular usability. That's called a negative cash. And this would be remembering things that did not work. So, for example, if you accidentally misspelled the domain name, like if you put two M's or Miss type c, n n and put three ends.
 The only way that your computer figures out for the the look up figures out that these are probably not valid domain names, is by going through that whole, DNS querying process. So, you can send all those messages to figure out o, this wasn't a valid domain name. And then you look at the domain name and you see you mistyped it, right? Of course, there could be other things like someone in expecting some misspellings of common names. As register that domain. It's actually a Spam side of some form asks, for these things could take a long time to fail the first time because all of those lookups need to occur and you need to get that response back.
 From an authoritative DNS server in the end that that there's no IP address corresponding to that to that pain. So be good to remember things that don't work, so that the failure would take less time the next time and not all of those messages would need to be sent to figure out that that server didn't exist at all. Unfortunately, this is an optional process. And right now, it's really not widely implemented. But overall this cashing process we talked about primarily the positive cashing process that we would save the IP addresses corresponding to commonly looked up domain names so that the next look up, isn't going to take nearly as long.